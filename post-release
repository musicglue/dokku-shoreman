#!/bin/bash
APP="$1"; IMAGE="$2"

read -d '' runner <<'EOF'
#!/bin/bash
# **shoreman** is an implementation of the **Procfile** format. Inspired by
# the original [foreman](http://ddollar.github.com/foreman/) tool for ruby,
# as well as [norman](https://github.com/josh/norman) for node.js.

# This version is altered for use within dokku
# .env parsing has been removed
# children are killed using their parent ID

set -e
export HOME=/app
for file in \$HOME/.profile.d/*; do source \$file; done
hash -r
cd \$HOME

export BOOT_PROCESSES=",\${BOOT_PROCS:=web},"

if [ ! -f Procfile ]; then
  ruby -ryaml -e "puts ((YAML.load_file('.release')['default_process_types'] || {}).map { |k, v| \\"#{k}: #{v}\\"} * \\"\\n\\")" > Procfile
fi

while read line || [ -n "\$line" ]; do
  name=\${line%%:*}
  if [[ "\$BOOT_PROCESSES" == *",\$name,"* ]]; then
    command=\${line#*: }
    echo "Starting \${name}..."
    sh -c "\${command} | sed -e 's/^/\${name}| /'" &
  fi
done < "Procfile"

onexit() {
  echo SIGINT received
  echo sending SIGTERM to all processes
  children=\$(ps --ppid=\$\$ -o pid='')
  kill -- \$children &> /dev/null
  sleep 1
}
trap onexit SIGTERM SIGINT EXIT

wait
EOF

set -e

echo "-----> Injecting Shoreman ..."

id=$(echo "$runner" | docker run -i -a stdin $IMAGE /bin/bash -c "cat > /start")
test $(docker wait $id) -eq 0
docker commit $id $IMAGE > /dev/null
