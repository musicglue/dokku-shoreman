#!/bin/bash
APP="$1"; IMAGE="$2"

read -d '' runner <<-'EOS'
#!/usr/bin/env bash

set -e
export HOME=/app
for file in \$HOME/.profile.d/*; do source \$file; done
hash -r
cd \$HOME

export DYNO=\$1

if [ ! -f Procfile ]; then
  ruby -ryaml -e \"puts ((YAML.load_file('.release')['default_process_types'] || {}).map { |k, v| \\\"#{k}: #{v}\\\"} * \\\"\n\\\")\" > Procfile
fi

cat > /tmp/hammertime <<ES2
  lines = File.read(\"/app/Procfile\")
  processes = lines.split(\"\\n\")
  processes = processes.each_with_object({}) do |line, hsh|
    args = line.split(\":\")
    hsh[args[0]] = args[1]
  end
  if processes.key?(ENV['DYNO'])
    command = processes[ENV['DYNO']]
    puts command
  end
ES2

export HAMMER="\$(DYNO=\$DYNO ruby /tmp/hammertime)"
echo \$HAMMER
exec \$HAMMER
EOS

set -e

echo "-----> Injecting Shoreman ..."

id=$(echo "$runner" | docker run -i -a stdin $IMAGE /bin/bash -c "cat > /start")
test $(docker wait $id) -eq 0
docker commit $id $IMAGE > /dev/null
